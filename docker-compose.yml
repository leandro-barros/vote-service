version: '3'
services:
  vote-service:
    build:
      dockerfile: ./docker/vote-service.dockerfile
      context: .
    image: leandro/vote-service
    container_name: vote-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb-voteservice:3306/vote?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8087:8080"
    networks:
      - voteservice-network
    depends_on:
      - "mysqldb-voteservice"

  mysqldb-voteservice:
    image: mysql:8.0
    container_name: mysqldb-voteservice
    ports:
      - "3307:3306"
    networks:
      - voteservice-network
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./data/volumes-mysql/data-voteservice:/var/lib/mysql

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - voteservice-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - voteservice-network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - voteservice-network
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks:
  voteservice-network:
    driver: bridge